@model Subnautica.Models.MaterialRelationsViewModel

@{
	ViewBag.Title = "Material Relations Editor";
}

@{
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<header>
	<h1>Material Relations Editor</h1>
</header>
<main class="flex space-between">
	<div>
		<h2>
			@if (Model.ProductName != null)
			{
				<span>Edit <strong>@Model.ProductName</strong>:</span>
			}
			else
			{
				<span>Add new resource relationship:</span>
			}
		</h2>
	</div>
	<div data-url="MaterialRelation" class="flex">
		<div>
			<span>Filter by Instrument: </span>
			@Html.EnumDropDownListFor(x => x.InstrumentType, new { @id = "Type", @class = "form-control" })
		</div>
		<div>
			<span>Search...</span>
			<input id="search" class="form-control" />
		</div>
	</div>
</main>
<div class="row">
	<hr />
	<div class="col-md-6">
		@using (Html.BeginForm())
		{
			@Html.AntiForgeryToken()

			@Html.HiddenFor(x => x.ID)
			<div class="form-horizontal row">

				<div class="col-lg-12">
					@Html.LabelFor(x => x.ProductName, new { @class = "form-label" })
					<div class="form-group">
						@Html.DropDownListFor(x => x.ProductID, Model.Products, new { @class = "form-control" })
						@Html.ValidationMessageFor(x => x.Products)
					</div>
				</div>

				<div class="col-lg-12">
					@Html.LabelFor(x => x.ProductQuantity, new { htmlAttributes = new { @class = "form-label" } })
					<div class="form-group">
						@Html.EditorFor(x => x.ProductQuantity, new { htmlAttributes = new { @class = "form-control", min = "1", value = "1" } })
						@Html.ValidationMessageFor(x => x.ProductQuantity)
					</div>
				</div>

				<div class="additions">
					<div class="minus disabled focusable" aria-label="remove last box" tabindex="0">
						<span></span>
					</div>
					<div class="plus focusable" aria-label="add new box" tabindex="0">
						<span class="vertical"></span>
						<span></span>
					</div>
				</div>

				@for (var i = 0; i < Model.ResourceListViewModel.Count(); i++)
				{
					<div class="box row col-lg-12">

						<div class="col-lg-12">
							@Html.LabelFor(x => x.ResourceListViewModel[i].Name, new { @class = "form-label" })
							<div class="form-group">
								@Html.DropDownListFor(x => x.ResourceListViewModel[i].ID, Model.ResourceListViewModel[i].Materials, new { @class = "form-control" })
								@Html.ValidationMessageFor(x => x.ResourceListViewModel[i].Materials)
							</div>
						</div>

						<div class="col-lg-12">
							@Html.LabelFor(x => x.ResourceListViewModel[i].Quantity, new { htmlAttributes = new { @class = "form-label" } })
							<div class="form-group">
								@Html.EditorFor(x => x.ResourceListViewModel[i].Quantity, new { htmlAttributes = new { @class = "form-control", min = "1", value = "1" } })
								@Html.ValidationMessageFor(x => x.ResourceListViewModel[i].Quantity)
							</div>
						</div>
					</div>
				}

				<div class="form-group save col-lg-12">
					<button class="btn btn-success">Save</button>
					@Html.ActionLink("Cancel", "MaterialRelations", new { id = (Guid?)null }, new { @class = "btn btn-danger" })
				</div>
			</div>
		}

	</div>
	<div class="col-md-6 list">
		@Html.Action("_MaterialRelationList")
	</div>
</div>
